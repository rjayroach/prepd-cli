---
- name: Check if the project alredy exists
  stat:
    path: '{{ spec.project_dir }}'
  register: project_status

- name: Quit if the project already exists
  fail:
    msg: '{{ spec.project_dir }} already exists'
  when: project_status.stat.exists

- name: Create project directory structure
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - '{{ spec.project_dir }}/inventory/local/host_vars'
    - '{{ spec.project_dir }}/cli-vars'

- name: Copy the project base files
  copy:
    src: '{{ role_path }}/files/'
    dest: '{{ spec.project_dir }}'

- name: Copy prepd.yml to the project
  copy:
    src: '{{ playbook_dir }}/prepd.yml'
    dest: '{{ spec.project_dir }}/prepd.yml'
    mode: 0755

- name: Template inventory/local/host_vars/prepd.yml
  template:
    src: prepd.yml.j2
    dest: '{{ spec.project_dir }}/inventory/local/host_vars/prepd.yml'

- name: Template cli-vars/cli.yml
  template:
    src: cli.yml.j2
    dest: '{{ spec.project_dir }}/cli-vars/cli.yml'

- name: Template README.md
  template:
    src: README.md
    dest: '{{ spec.project_dir }}/README.md'

- name: "Generate the project's vault password"
  copy:
    content: "{{ 999999999999999999999 | random | string + (lookup('pipe', 'date +%s%N')) | to_uuid }}"
    dest: '{{ spec.project_dir }}/.vault-password.txt'

- name: "Initialize the project's git repository"
  command: '{{ item }}'
  args:
    chdir: '{{ spec.project_dir }}'
  with_items:
    - git init
    - git add .
    - git commit -m 'first commit'
